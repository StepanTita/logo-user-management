// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "892b35b6a7163ce30b3659075733f928"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"d4ae0b46cc7a80c01b1efeef25c1c540": "1f8b08000000000000ff7490b1ca83301485f73cc5d954fedf27702ab4432985227470bc9a5b09c4447213ece317b5140bf64ce17cf9ee70ca127f83e90345c67d545de0f915a9b58c241c44e50a008cc69ad6f4c2c190fd5ffaf98fa38111f919e17c844bf6cd967ecec2343f28d9882c5ba9a455dca73c90b11ff7fbee4822930f7a8f09d9881fdead3e5f0f7583cba9416e74a18a4aa9ed00473f39a5831fb703a023e94873f50a0000ffff54b97def2b010000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001-initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "d4ae0b46cc7a80c01b1efeef25c1c540"})
	}()
	return nil
}()
